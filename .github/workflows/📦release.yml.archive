

name: ðŸ“¦Publish on PyPi

on:
  release:
    types: [created]

jobs:

  release:
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Python Semantic Release
      uses: relekang/python-semantic-release@v7.28.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        repository_username: __token__
        repository_password: ${{ secrets.PYPI_TOKEN }}

    - name: Merge main to develop
      uses: robotology/gh-action-nightly-merge@v1.4.0
      with:
        stable_branch: 'main'
        development_branch: 'dev'
        allow_ff: true
        user_name: github-actions
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}










# on:
#   release:
#     types: [created]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.10
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           python -m pip install --upgrade poetry
#           python -m pip install --upgrade twine
#       - name: Build and publish
#         env:
#           TWINE_USERNAME: __token__
#           TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#         run: |
#           poetry build
#           twine upload dist/*


# on:
#   release:
#     types: [published]
#   push:
#     branches: [ "main","dev"]

# jobs:
#   publish:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.x'
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install build
#     - name: Build package
#       run: python -m build
#     - name: Publish package
#       uses: pypa/gh-action-pypi-publish@v1.8.5
#       with:
#         user: __token__
#         password: ${{ secrets.PYPI_API_TOKEN }}
#     # - name: Install dependencies
#     #   run: |
#     #     python -m pip install --upgrade pip
#     #     pip install build
#     #     pip install setuptools wheel twine
#     # - name: Build and publish
#     #   env:
#     #     TWINE_USERNAME: __token__
#     #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#     #   run: |
#     #     python setup.py sdist bdist_wheel
#     #     twine upload dist/*

#   notify:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: Netail/webhook-notifier@v1
#       with:
#         discord-url: ${{ secrets.DISCORD_WEBHOOK }}
#         color: 'info'
#         title: '${{ github.event.pull_request.user.login }} opened PR-${{ github.event.number }} in ${{ github.event.repository.name }}'
#         text: ${{ github.event.pull_request.title }}
#         fields: '[{"name": "Repository", "value": "${{ github.event.repository.name }}"}, {"name": "Pull Request ID", "value": "${{ github.event.number }}"}]'
#         buttons: '[{"label": "View PR", "url": "${{ github.event.pull_request.html_url }}"}]'